{"version":3,"file":"forecast-detailed-day.component.js","sourceRoot":"","sources":["../../../../src/components/weather-forecast/forecast-detailed/forecast-detailed-day.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { ChartData, ChartOptions } from 'chart.js';\nimport { Forecast } from '../../../services/api/weather.api.service';\nimport { WeatherHelpersService } from '../../../services/weather-helpers.service';\nimport { WeatherSettings } from '../../../weather.interfaces';\n\n@Component({\n  selector: 'weather-forecast-detail-day',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      :host {\n        display: flex;\n        align-items: center;\n        padding: 0.1em 0;\n        font-size: 1em;\n        box-sizing: border-box;\n        justify-content: flex-start;\n        width: 100%;\n      }\n      :host > * {\n        padding: 0 0.4em;\n      }\n      .left {\n        flex-grow: 0;\n      }\n      weather-chart {\n        height: 80px;\n        width: 80%;\n        flex: 1 1;\n      }\n\n      weather-icon {\n        margin-top: 0.3em;\n        font-size: 1.4em;\n        display: block;\n      }\n    `\n  ],\n  template: `\n    <div class=\"left\">\n      {{ forecast[0]?.data | date: 'EEE' }}\n      <weather-icon [iconClass]=\"forecast[0]?.iconClass\"></weather-icon>\n    </div>\n    <weather-chart\n      [type]=\"'line'\"\n      [data]=\"chartData\"\n      [options]=\"chartOptions\"\n    ></weather-chart>\n  `\n})\nexport class WeatherForecastDetailDayComponent implements OnChanges {\n  chartData: ChartData;\n  chartOptions: ChartOptions;\n  @Input() settings: WeatherSettings;\n\n  @Input()\n  set forecast(value: Forecast[]) {\n    this._forecast = value;\n  }\n  get forecast(): Forecast[] {\n    return this._forecast;\n  }\n  private _forecast: Forecast[];\n\n  constructor(private weatherHelpers: WeatherHelpersService) {}\n\n  ngOnChanges(change: SimpleChanges) {\n    if (this.settings && change['forecast']) {\n      this.updateChartOptions();\n      this.chartData = this.weatherHelpers.mapForecastToCharts(\n        this._forecast,\n        this.settings.color\n      );\n    }\n  }\n\n  private updateChartOptions() {\n    this.chartOptions = {\n      scales: {\n        xAxes: [\n          {\n            type: 'time',\n            time: {\n              unit: 'hour',\n              isoWeekday: true,\n              displayFormats: {\n                hour: 'hA'\n              },\n              tooltipFormat: 'LLL'\n            },\n            gridLines: {\n              display: false\n            },\n            ticks: {\n              display: true,\n              fontColor:\n                this.settings && this.settings.color\n                  ? this.weatherHelpers.hexToRgbA(this.settings.color, '0.8')\n                  : 'white',\n              fontSize: 9,\n              maxTicksLimit: 3\n            }\n          }\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: false\n            },\n            ticks: {\n              fontColor:\n                this.settings && this.settings.color\n                  ? this.weatherHelpers.hexToRgbA(this.settings.color, '0.8')\n                  : 'white',\n              fontSize: 9,\n              autoSkip: true,\n              labelOffset: 0,\n              mirror: false,\n              maxTicksLimit: 3,\n              callback: function(value, index, values) {\n                return value;\n              }\n            }\n          }\n        ]\n      },\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n        position: 'bottom'\n      },\n      title: {\n        display: false\n      }\n    };\n  }\n}\n"]}