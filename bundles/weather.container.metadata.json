[{"__symbolic":"module","version":4,"metadata":{"WeatherContainer":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"weather-widget","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":25,"character":19},"member":"Default"},"styles":["\n      :host {\n        display: flex;\n        position: relative;\n        padding: 1em;\n        box-sizing: border-box;\n      }\n      .info {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n      }\n      .info.wide {\n        flex-direction: row;\n      }\n      .wide .current {\n        flex-grow: 0;\n      }\n      .wide .forecast {\n        flex-grow: 1;\n        overflow-y: auto;\n        height: 100%;\n      }\n      .current {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        min-width: 140px;\n      }\n      .forecast {\n        min-width: 200px;\n        width: 100%;\n        overflow-y: auto;\n      }\n      .current,\n      .forecast {\n        padding: 0.5em;\n      }\n      weather-actions {\n        display: block;\n        position: absolute;\n        top: 10px;\n        right: 10px;\n      }\n      weather-current-temperature.big {\n        font-size: 3em;\n      }\n      weather-icon.big {\n        font-size: 6em;\n        padding: 0.15em;\n      }\n      .empty {\n        flex-direction: row;\n      }\n      .empty i {\n        font-size: 3em;\n        margin-right: 0.3em;\n      }\n    "],"template":"\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/weather-icons/2.0.10/css/weather-icons.min.css\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/weather-icons/2.0.10/css/weather-icons-wind.min.css\"\n    />\n    <div *ngIf=\"currentWeather\" class=\"info\" [class.wide]=\"isWideLayout\">\n      <div class=\"current\">\n        <weather-icon\n          class=\"big\"\n          [iconImageUrl]=\"currentWeather?.iconUrl\"\n          [iconClass]=\"currentWeather?.iconClass\"\n        ></weather-icon>\n        <weather-current-description\n          [descripion]=\"currentWeather?.description\"\n        ></weather-current-description>\n        <weather-current-wind\n          *ngIf=\"settings.showWind\"\n          [scale]=\"settings.scale\"\n          [deg]=\"currentWeather?.wind.deg\"\n          [speed]=\"currentWeather?.wind.speed\"\n        ></weather-current-wind>\n        <weather-location [place]=\"currentWeather?.location\"></weather-location>\n        <weather-current-temperature\n          class=\"big\"\n          [temp]=\"currentWeather?.temp\"\n          [deg]=\"settings.scale\"\n        ></weather-current-temperature>\n        <weather-current-details\n          *ngIf=\"settings.showDetails\"\n          [maxTemp]=\"currentWeather?.maxTemp\"\n          [minTemp]=\"currentWeather?.minTemp\"\n          [pressure]=\"currentWeather?.pressure\"\n          [humidity]=\"currentWeather?.humidity\"\n        ></weather-current-details>\n      </div>\n      <div class=\"forecast\" *ngIf=\"settings.showForecast\">\n        <weather-forecast\n          [forecast]=\"forecast\"\n          [settings]=\"settings\"\n          [mode]=\"settings.forecastMode\"\n        ></weather-forecast>\n      </div>\n    </div>\n    <div *ngIf=\"!currentWeather\" class=\"info empty\">\n      <i class=\"wi wi-sunrise\"></i>\n      No weather data...\n    </div>\n    <weather-actions\n      *ngIf=\"isMouseOn\"\n      (update)=\"getWeather()\"\n    ></weather-actions>\n  "}]}],"members":{"background":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":148,"character":3},"arguments":["style.background"]}]}],"color":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":149,"character":3},"arguments":["style.color"]}]}],"width":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":150,"character":3},"arguments":["style.width"]}]}],"height":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":151,"character":3},"arguments":["style.height"]}]}],"forecast":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":153,"character":3}}]}],"currentWeather":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":154,"character":3}}]}],"settings":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":155,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"./services/api/weather.api.service","name":"WeatherApiService","line":187,"character":24},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":188,"character":31},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":189,"character":22},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":190,"character":21}]}],"ngOnDestroy":[{"__symbolic":"method"}],"onMouseEnter":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":202,"character":3},"arguments":["mouseenter"]}]}],"onMouseLeave":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":207,"character":3},"arguments":["mouseleave"]}]}],"getWeather":[{"__symbolic":"method"}],"currentWeatherCall":[{"__symbolic":"method"}],"forecastCall":[{"__symbolic":"method"}]}}}}]